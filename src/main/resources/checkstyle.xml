<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
  <property name="charset" value="UTF-8"/>
  <property name="severity" value="error"/>
  <property name="fileExtensions" value="java, xml, scala"/>
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>
  <module name="SuppressionFilter">
    <property name="file" value="src/main/resources/suppressions.xml"/>
  </module>
  <module name="TreeWalker">
    <module name="RegexpSinglelineJava">
      <property name="format" value="System\.out\.print"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Do not use System.out.print*, use log instead."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="YearMonthDay"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Always use LocalDate instead of YearMonthDay."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="currentTimeMillis"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Do not use currentTimeMillis"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="super\(\)"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Never call default super constructor."/>
    </module>
    <module name="IllegalImport">
      <property name="illegalPkgs"
                value="sun,com.sun.tools,com.thoughtworks.selenium,junit.framework,org.hibernate.shards.util,
                com.google.api.client.repackaged,com.google.api.client.util,atunit.lib,com.googlecode.charts4j.collect,"/>
    </module>
    <module name="InterfaceIsType"/>
    <module name="EqualsHashCode"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="PackageDeclaration"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports">
      <property name="processJavadoc" value="true"/>
    </module>
    <module name="OuterTypeFilename"/>
    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
      <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
      <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
    </module>
    <module name="LineLength">
      <property name="max" value="400"/>
      <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>
    <module name="OneTopLevelClass"/>
    <module name="NoLineWrap"/>
    <module name="NeedBraces"/>
    <module name="LeftCurly"/>
    <module name="RightCurly">
      <property name="option" value="alone"/>
      <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="ArrayTypeStyle"/>
    <module name="MissingSwitchDefault"/>
    <module name="FallThrough"/>
    <module name="UpperEll"/>
    <module name="ModifierOrder"/>
    <module name="SeparatorWrap">
      <property name="tokens" value="DOT"/>
      <property name="option" value="nl"/>
    </module>
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA"/>
      <property name="option" value="EOL"/>
    </module>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      <message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="NoFinalizer"/>
    <module name="GenericWhitespace">
      <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
      <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
      <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
      <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
    </module>
    <module name="MethodParamPad"/>
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="true"/>
    </module>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="AtclauseOrder">
      <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
      <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
    </module>
    <module name="MethodName">
      <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
      <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''."/>
    </module>
    <module name="SingleLineJavadoc"/>
    <module name="EmptyCatchBlock">
      <property name="exceptionVariableName" value="expected|ignored"/>
    </module>
    <module name="EmptyStatement"/>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceAfter"/>
    <module name="WhitespaceAfter"/>
    <module name="ParenPad"/>
    <module name="EmptyLineSeparator">
      <property name="tokens" value="PACKAGE_DEF, IMPORT, METHOD_DEF"/>
    </module>
    <module name="RedundantModifier"/>
  </module>
</module>